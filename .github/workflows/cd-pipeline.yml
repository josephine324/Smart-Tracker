name: Continuous Deployment Pipeline

on:
  pull_request:
    branches: [ "develop" ]
  push:
    branches: [ "main" ]

jobs:
  build-test-scan-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            frontend/node_modules
            backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Run backend tests
        working-directory: ./backend
        run: npm test || echo "No tests defined, skipping"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build frontend image
        working-directory: ./frontend
        run: docker build -t smart-tracker-frontend-jojo:${{ github.sha }} .

      - name: Build backend image
        working-directory: ./backend
        run: docker build -t smart-tracker-backend:${{ github.sha }} .

      - name: Scan frontend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: smart-tracker-frontend-jojo:${{ github.sha }}
          format: 'table'
          exit-code: '0' #changes
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          scanners: 'vuln'
          skip-files: '**/.npm/_cacache/**'

      - name: Scan backend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: smart-tracker-backend:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          scanners: 'vuln'
          skip-files: '**/.npm/_cacache/**'

      - name: Log in to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push frontend image
        run: |
          docker tag smart-tracker-frontend-jojo:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:${{ github.sha }}
          docker tag smart-tracker-frontend-jojo:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:latest

      - name: Push backend image
        run: |
          docker tag smart-tracker-backend:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:${{ github.sha }}
          docker tag smart-tracker-backend:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: |
          terraform apply -auto-approve \
            -var="mongo_password=${{ secrets.MONGO_PASSWORD }}" \
            -var="github_sha=${{ github.sha }}"
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: "e8bbaa1c-333d-4bcb-bfbc-74c67ceeab23"
          ARM_TENANT_ID: "149faad4-6736-43ac-b8ee-45cc3df98097"
