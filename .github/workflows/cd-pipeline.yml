name: Continuous Deployment Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-scan-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            frontend/node_modules
            backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run tests
        run: |
          cd backend
          npm test || echo "No tests defined, skipping"

      - name: Dependency vulnerability scan
        run: |
          cd frontend
          npm audit --audit-level=moderate
          cd ../backend
          npm audit --audit-level=moderate

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build frontend image
        run: |
          cd frontend
          docker build -t smart-tracker-frontend-jojo:${{ github.sha }} .

      - name: Build backend image
        run: |
          cd backend
          docker build -t smart-tracker-backend:${{ github.sha }} .

      - name: Scan frontend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: smart-tracker-frontend-jojo:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan backend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: smart-tracker-backend:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Log in to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push frontend image
        run: |
          docker tag smart-tracker-frontend-jojo:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:${{ github.sha }}

      - name: Push backend image
        run: |
          docker tag smart-tracker-backend:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:${{ github.sha }}
