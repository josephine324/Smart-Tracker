name: Continuous Deployment Pipeline

on:
  pull_request:
    branches: [ "develop" ]
  push:
    branches: [ "main" ]

jobs:
  build-test-scan-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            frontend/node_modules
            backend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Run backend tests
        working-directory: ./backend
        run: npm test || echo "No tests defined, skipping"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build frontend image
        working-directory: ./frontend
        run: docker build -t smart-tracker-frontend-jojo:${{ github.sha }} .

      - name: Build backend image
        working-directory: ./backend
        run: docker build -t smart-tracker-backend:${{ github.sha }} .

      - name: Scan frontend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: smart-tracker-frontend-jojo:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Scan backend image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: smart-tracker-backend:${{ github.sha }}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Log in to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Push frontend image
        run: |
          docker tag smart-tracker-frontend-jojo:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:${{ github.sha }}
          docker tag smart-tracker-frontend-jojo:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:latest

      - name: Push backend image
        run: |
          docker tag smart-tracker-backend:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:${{ github.sha }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:${{ github.sha }}
          docker tag smart-tracker-backend:${{ github.sha }} ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:latest

      # Update Azure Container Apps
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update Container Apps
        env:
          RESOURCE_GROUP: smarttacker1
        run: |
          echo "Updating Container Apps in resource group: $RESOURCE_GROUP"
          
          # Update frontend container app
          az containerapp update \
            --name smarttrackerapp \
            --resource-group $RESOURCE_GROUP \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:latest
          
          # Update backend container app
          az containerapp update \
            --name smarttrackerbackend \
            --resource-group $RESOURCE_GROUP \
            --image ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:latest

      # Option B: Update Azure App Service (if using App Service)
      # - name: Deploy to Azure App Service Frontend
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ secrets.FRONTEND_APP_NAME }}
      #     images: ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:latest

      # - name: Deploy to Azure App Service Backend
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ secrets.BACKEND_APP_NAME }}
      #     images: ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:latest

      # Option C: Update Azure Container Apps (if using Container Apps)
      # - name: Update Container Apps
      #   run: |
      #     az containerapp update \
      #       --name smart-tracker-frontend \
      #       --resource-group ${{ secrets.RESOURCE_GROUP }} \
      #       --image ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-frontend-jojo:latest
      #     
      #     az containerapp update \
      #       --name smart-tracker-backend \
      #       --resource-group ${{ secrets.RESOURCE_GROUP }} \
      #       --image ${{ secrets.ACR_LOGIN_SERVER }}/smart-tracker-backend:latest
